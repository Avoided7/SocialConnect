@model User

@{
    ViewData["Title"] = Model.UserName;
    string userId = User.GetUserId() ?? string.Empty;
    IReadOnlyCollection<News> allNews = Model.News.Where(news => news.GroupId == null).OrderByDescending(news => news.WrittenIn).ToList();
    string status = @Model.Status.IsOnline ? "-fill" : "";
}

<style>
    .like
    {
        color: red;;
    }
    .like:hover
    {
        color: white;
    }
    
    .comment
    {
        color: #3e9ddd;
    }
    .comment:hover
    {
        color: white;
    }
</style>
<div class="card mb-3">
    <div class="card-body">
        <h3>@Model.UserName</h3>
        <div>Status: <i class="bi bi-circle@(status) text-success" id="@Model.Id"></i></div>
        @if (userId != Model.Id)
        {
            <a class="btn btn-success" asp-controller="Chats" asp-action="Create" asp-route-username="@Model.UserName">Send message</a>
        }
        <hr/>
        <b>Birthday: @Model.DateOfBirth.ToShortDateString()</b>
    </div>
</div>

@if (allNews.Any())
{
    <hr/>
    <h3 class="text-center">News</h3>
    @foreach (News news in allNews)
    {
        @(await Html.PartialAsync("_LoadNews", news))
    }
}

<script>
notificationHub.on("ChangeStatus", function (userId, status)
{
     const statusElement = document.getElementById(userId);
     
     const alreadyOnline = statusElement.classList.contains("bi-circle-fill")
     if (alreadyOnline && !status)
     {
           statusElement.classList.replace("bi-circle-fill", "bi-circle");
     }
     
     if (!alreadyOnline && status)
     {
        statusElement.classList.replace("bi-circle", "bi-circle-fill");   
     }
});
</script>