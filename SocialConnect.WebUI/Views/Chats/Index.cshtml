@model Chat

@{
    string currentUsername = User.Identity?.Name ?? "";
    string userId = User.GetUserId() ?? "";
    User? user = Model.Users.First(user => user.UserId != userId).User;
}

<style>
    .link-decorator
    {
        text-decoration: none;
    }
    .on-hover:hover
    {
        cursor: pointer;
    }
</style>
<div class="card card-body mb-3">
    <div class="card-text">
        @if (Model.IsCoupleChat)
        {
            <h3><a asp-controller="Account" asp-action="Profile" asp-route-username="@user?.UserName">@user?.UserName</a></h3>
        }
    </div>
</div>
<div class="card card-body mb-3">
    <div id="messages" style="height: 400px; overflow: auto;">
        @foreach (ChatMessage message in Model.Messages)
        {
            string username = @message.Chat.Users.First(user => message.UserId == user.UserId).User!.UserName;
            string color = username == currentUsername ? "text-info" : "text-success";
            string textPosition = username == currentUsername ? "float: right;" : "";
                <div id="@message.Id" class="bg-secondary mb-1" style="padding: 5px; width: 48%; clear: both; @textPosition">
                    <a class="@color link-decorator" asp-controller="Account" asp-action="Profile" asp-route-username="@username">@username</a>
                    @if (username == currentUsername)
                    {
                        <i class="bi bi-x-lg text-danger on-hover" onclick="deleteMessage('@message.Id')"></i>
                    }
                    <div>@message.Content</div>
                </div>
        }
    </div>
</div>

<div class="chat-box card card-body mb-3">
    <input class="form-control bg-body text-white mb-2" id="messageContent" placeholder="Message"/>
    <input class="btn btn-success" type="button" id="messageSend" value="Send" disabled/>
</div>


<script>
    const connectionHub = new signalR.HubConnectionBuilder()
                                     .withUrl("/chat?groupName=@Model.GroupName")
                                     .build()
    const messageBody = document.getElementById("messages");
    const currentUsername = '@currentUsername';
    console.log(currentUsername);
    messageBody.scrollTop = messageBody.scrollHeight;
               
   
    document.getElementById("messageSend").addEventListener("click", function ()
    {
        const message = document.getElementById("messageContent");
        
        const response = fetch("/Chats/SendMessage",
                        {
                            method: "POST",
                            headers: { "Content-Type": "application/json" },
                            body: JSON.stringify({ groupName: '@Model.GroupName', message: message.value })
                        });
        message.value = "";
        message.select();
    })
                                     
    connectionHub.on("Receive", function (username, id, message)
    {
         
         const messageCard = document.createElement("div");
         messageCard.classList.add("bg-secondary");
         messageCard.classList.add("mb-1");
         messageCard.style.padding = "5px";
         messageCard.style.width = "48%";
         messageCard.style.clear = "both";
         
         messageCard.id = id;
         
         const div = document.createElement("div");
         const link = document.createElement("a");
         
         if (username == currentUsername)
          {
              messageCard.style.float = "right";
              link.classList.add("text-info");
          }
         
         link.classList.add("link-decorator");
         
         link.setAttribute("href", '@Url.ActionLink("Profile", "Account")' + "&username=" + username)
         link.textContent = username + " ";
         
         div.appendChild(link);
         
         if (username == currentUsername)
         {
             const i = document.createElement("i");
             i.classList.add("bi");
             i.classList.add("bi-x-lg");
             i.classList.add("text-danger");
             i.classList.add("on-hover");
             i.addEventListener("click", () => deleteMessage(id))
             div.appendChild(i);
         }
         
         const messageDiv = document.createElement("div");
         messageDiv.textContent = message;
         
         div.appendChild(messageDiv);
         
         messageCard.appendChild(div);
         
         messageBody.appendChild(messageCard);
         
         messageBody.scrollTop = messageBody.scrollHeight;
    });
    
    connectionHub.on("Delete", function (id)
    {
       const element = document.getElementById(id);   
       const body = document.getElementById("messages");  
       body.removeChild(element); 
    });
    
    function deleteMessage(id)
    {
        const response = fetch("/Chats/DeleteMessage?messageId=" + id, 
        {
            method: "DELETE"
        });
    }
    
    connectionHub.start()
                 .then(function ()
                 {
                     document.getElementById("messageSend").disabled = false;
                 })
</script>